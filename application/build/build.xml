<?xml version="1.0" encoding="UTF-8"?>

<project name="MyProject" default="nothing">

    <!--<property name="buildDir" value="${env.BUILD_DIR}"/>-->
    <!--<property name="reportsDir" value="${env.REPORTS_DIR}"/>-->

    <fileset id="srcfiles" dir="..">
        <include name="src/**"/>
        <include name="config/**"/>
        <include name="public/**"/>
        <include name="composer.json"/>
        <include name="composer.lock"/>
        <exclude name="*.tmp"/>
    </fileset>

    <target name="build:fordeploy">

        <echo msg="Building application for deployment..."/>

        <!--<mkdir dir="${buildDir}"/>-->

        <!--<echo msg="Copying files..."/>-->
        <!--<copy todir="${buildDir}">-->
            <!--<fileset refid="srcfiles"/>-->
        <!--</copy>-->

        <!--<echo msg="Executing composer..."/>-->
        <!--<exec command="COMPOSER_CACHE_DIR=/tmp/composer-cache/ composer install" dir="${buildDir}" passthru="true" checkreturn="true"/>-->

    </target>

    <target name="nothing">

        <echo msg="Doing nothing..."/>

    </target>

    <target name="build:application">

        <echo msg="Building application..."/>

    </target>

    <target name="build:tester">

        <echo msg="Building tester..."/>

    </target>

    <!--<target name="clean">-->
        <!--<echo msg="Cleaning build directory..."/>-->
        <!--<delete dir="${buildDir}" includeemptydirs="true" verbose="true" failonerror="true" quiet="true"/>-->
    <!--</target>-->

    <!--<target name="deploy" depends="build:fordeploy">-->
        <!--<echo msg="Deploying project..."/>-->
    <!--</target>-->

    <target name="waitForServices">
        <echo msg="Waiting for services to start up..."/>
        <exec command="./scripts/wait-for-it.sh --host=mysql --port=3306 --timeout=15" dir=".." passthru="true" checkreturn="true"/>
        <!--<exec command="./scripts/wait-for-it.sh &#45;&#45;host=memcached &#45;&#45;port=11211 &#45;&#45;timeout=15" dir=".." passthru="true" checkreturn="true"/>-->

    </target>

    <target name="waitForFrontendApp">
        <echo msg="Waiting for application to start up..."/>
        <exec command="./scripts/wait-for-it.sh --host=appfortests --port=80 --timeout=15" dir=".." passthru="true" checkreturn="true"/>
    </target>

    <target name="test:all" description="Runs all tests" depends="test:smoke, test:database">
    </target>

    <target name="test:unit" description="Runs simple unit tests">
        <phpunit
                haltonerror="true"
                haltonfailure="true"
                printsummary="true"
                haltonskipped="true"
                haltonincomplete="true"
                bootstrap="../bootstrap.php"
        >
            <formatter type="plain" usefile="false"/>
            <!--<formatter todir="${reportsDir}" type="html"/>-->
            <batchtest>
                <fileset dir="../tests/UnitTests/">
                    <include name="*Test.php"/>
                </fileset>
            </batchtest>
        </phpunit>
    </target>

    <target name="test:smoke" description="Runs smoke tests with HTTP against application" depends="waitForFrontendApp">

        <!--<echo msg="Running phpunit ( reportsDir = ${reportsDir} )..."/>-->
        <phpunit
                haltonerror="true"
                haltonfailure="true"
                printsummary="true"
                haltonskipped="true"
                haltonincomplete="true"
                bootstrap="../bootstrap.php"
        >
            <formatter type="plain" usefile="false"/>
            <!--<formatter todir="${reportsDir}" type="html"/>-->
            <batchtest>
                <fileset dir="../tests/SmokeTests/">
                    <include name="*Test.php"/>
                </fileset>
            </batchtest>
        </phpunit>


    </target>

    <target name="test:database" description="Runs database test" depends="waitForServices">

        <echo msg="Creating database..."/>
        <exec command="vendor/bin/doctrine orm:schema-tool:update --force" dir=".." passthru="true" checkreturn="true"/>

        <!--<echo msg="Running phpunit ( reportsDir = ${reportsDir} )..."/>-->
        <phpunit
                haltonerror="true"
                haltonfailure="true"
                printsummary="true"
                haltonskipped="true"
                haltonincomplete="true"
                bootstrap="../bootstrap.php"
        >
            <formatter type="plain" usefile="false"/>
            <!--<formatter todir="${reportsDir}" type="html"/>-->
            <batchtest>
                <fileset dir="../tests/DatabaseTests/">
                    <include name="*Test.php"/>
                </fileset>
            </batchtest>
        </phpunit>
    </target>


</project>